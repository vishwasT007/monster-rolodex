{"version":3,"sources":["components/search-box/SearchBox.jsx","components/card/Card.jsx","components/card-list/CardList.jsx","App.js","index.js"],"names":["SearchBox","placeholder","handleChange","className","type","onChange","Card","props","src","monster","id","alt","name","email","CardList","monsters","map","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSAceA,EAXG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAChC,OACE,uBACEC,UAAU,SACVC,KAAK,SACLH,YAAaA,EACbI,SAAUH,KCODI,G,MAbF,SAACC,GACZ,OACE,sBAAKJ,UAAU,iBAAf,UACE,qBACEK,IAAG,+BAA0BD,EAAME,QAAQC,GAAxC,0BACHC,IAAI,YAEN,mCAAMJ,EAAME,QAAQG,KAApB,OACA,4BAAIL,EAAME,QAAQI,aCGTC,G,MAVE,SAACP,GAChB,OACE,qBAAKJ,UAAU,YAAf,SACGI,EAAMQ,SAASC,KAAI,SAACP,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCiCZO,G,wDAlCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXH,SAAU,GACVI,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEV,SAAUS,S,oBAG/C,WAAU,IAAD,OACP,EAAkCE,KAAKR,MAA/BH,EAAR,EAAQA,SAAUI,EAAlB,EAAkBA,YACZQ,EAAmBZ,EAASa,QAAO,SAACnB,GAAD,OACvCA,EAAQG,KAAKiB,cAAcC,SAASX,EAAYU,kBAGlD,OACE,sBAAK1B,UAAU,MAAf,UACE,oBAAIA,UAAU,UAAd,6BACA,cAAC,EAAD,CACEF,YAAY,kBACZC,aAAc,SAAC6B,GAAD,OAAO,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAE7D,cAAC,EAAD,CAAUlB,SAAUY,W,GA7BVO,cCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5a3a4658.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./SearchBox.css\";\n\nconst SearchBox = ({ placeholder, handleChange }) => {\n  return (\n    <input\n      className='search'\n      type='search'\n      placeholder={placeholder}\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  return (\n    <div className='card-container'>\n      <img\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n        alt='monster'\n      />\n      <h1> {props.monster.name} </h1>\n      <p>{props.monster.email}</p>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"../card/Card\";\nimport \"./CardList.css\";\n\nconst CardList = (props) => {\n  return (\n    <div className='card-list'>\n      {props.monsters.map((monster) => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React, { Component } from \"react\";\nimport SearchBox from \"./components/search-box/SearchBox\";\nimport CardList from \"./components/card-list/CardList\";\nimport \"./index.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className='App'>\n        <h1 className='heading'>Monster Rolodex</h1>\n        <SearchBox\n          placeholder='Search-monsters'\n          handleChange={(e) => this.setState({ searchField: e.target.value })}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}